name: Integration tests 2.0
on:
  workflow_dispatch:
    inputs:
      database:
        description: 'Database - a new one will be created if not provided'
        required: false
        default: ''
      engine:
        description: 'Engine - a new one will be created if not provided'
        required: false
      category:
        description: 'Version of used engine (engine-v2 means v2, infra version 2.1)'
        required: true
        default: 'true'
        type: choice
        options:
          - 'v2'
          - 'engine-v2'
  workflow_call:
    inputs:
      database:
        description: 'Database - a new one will be created if not provided'
        required: false
        default: ''
        type: string
      engine:
        description: 'Engine - a new one will be created if not provided'
        required: false
        type: string
      account:
        description: 'Account'
        required: true
        type: string
      category:
        description: 'Run category'
        required: true
        type: string
    secrets:
      FIREBOLT_CLIENT_ID_STG_NEW_IDN:
        required: true
      FIREBOLT_CLIENT_SECRET_STG_NEW_IDN:
        required: true
        
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Set account engine v2
        id: set-account
        run: |
          if ! [[ -z "${{ inputs.account }}" ]]; then
            echo "account=${{ inputs.account }}" >> $GITHUB_OUTPUT
            echo "account=${{ inputs.account }}"
          elif [[ "${{ inputs.account }}" == "engine-v2" ]]; then
            echo "account=${{ vars.FIREBOLT_ACCOUNT_V2 }}" >> $GITHUB_OUTPUT
            echo "account=${{ vars.FIREBOLT_ACCOUNT_V2 }}"
          else
            echo "account=${{ vars.FIREBOLT_ACCOUNT_V1 }}" >> $GITHUB_OUTPUT
            echo "account=${{ vars.FIREBOLT_ACCOUNT_V1 }}"
          fi
      - name: Check out code
        uses: actions/checkout@v2
        with:
          ref: ${{ inputs.branch }}

      - name: Set up .NET 6.0
        id: dotnet-setup
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0

      - name: use .NET 6.0
        run: |
          dotnet new globaljson --sdk-version '${{ steps.dotnet-setup.outputs.dotnet-version }}'    

      - name: Install dependencies
        run: |
          dotnet restore

      - name: Keep environment name in the summary
        run: echo '### Ran integration tests against ${{ inputs.environment }} ' >> $GITHUB_STEP_SUMMARY

      - name: Setup database and engine
        if: ${{ (inputs.database == '') && (inputs.category != 'engine-v2') }}
        id: setup
        uses: firebolt-db/integration-testing-setup@v2
        with:
          firebolt-client-id: ${{ secrets.FIREBOLT_CLIENT_ID_STG_NEW_IDN }}
          firebolt-client-secret: ${{ secrets.FIREBOLT_CLIENT_SECRET_STG_NEW_IDN }}
          account: ${{ steps.set-account.outputs.account }}
          api-endpoint: "api.staging.firebolt.io"
          instance-type: "B2"

      - name: Determine database name
        id: find-database-name
        run: |
          if ! [[ -z "${{ inputs.database }}" ]]; then
              echo "database_name=${{ inputs.database }}" >> $GITHUB_OUTPUT
          else
              echo "database_name=${{ steps.setup.outputs.database_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Determine engine name
        id: find-engine-name
        run: |
          if ! [[ -z "${{ inputs.engine }}" ]]; then
              echo "engine_name=${{ inputs.engine }}" >> $GITHUB_OUTPUT
          else
              echo "engine_name=${{ steps.setup.outputs.engine_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Setup env by build
        id: setup-env
        run: |
          if [ ${{ inputs.category }} == 'engine-v2' ]; then
              echo "run_setup=true" >> $GITHUB_OUTPUT
          else
              echo "run_setup=false" >> $GITHUB_OUTPUT
          fi

      - name: Run integration tests
        env:
          FIREBOLT_ENV: staging
          FIREBOLT_ACCOUNT: ${{ steps.set-account.outputs.account }}
          FIREBOLT_DATABASE: ${{ steps.setup.outputs.database_name }}
          FIREBOLT_ENGINE_NAME: ${{ steps.setup.outputs.engine_name }}
          FIREBOLT_CLIENT_ID: ${{ secrets.FIREBOLT_CLIENT_ID_STG_NEW_IDN  }}
          FIREBOLT_CLIENT_SECRET: ${{ secrets.FIREBOLT_CLIENT_SECRET_STG_NEW_IDN  }}
          FIREBOLT_RUN_SETUP: ${{ steps.setup-env.outputs.run_setup }}
        run: |
          dotnet test --filter '(Category=Integration|Category=IntegrationSetup)&(Category=${{ inputs.category }}|Category=general)&Name!=ExecuteLongTest' -l "console;verbosity=normal"
