name: Release new version

on:
  workflow_dispatch:
    inputs:
      major-release:
        required: false
        description: 'Trigger a major release (optional). Leave empty for regular release.'
      version:
        required: true
        description: 'Specify version (optional). Leave empty for automatic versioning.'

jobs:
  # integration-tests:
  #   uses: ./.github/workflows/integration-tests.yml
  #   secrets: inherit

  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    # needs: integration-tests
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_PAT }}

      - name: Setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"
        shell: bash


      - name: Version bump
        run: |
          sed -i "s/^    <FileVersion>.*<\/FileVersion>/    <FileVersion>${{ inputs.version }}<\/FileVersion>/" FireboltNETSDK/FireboltDotNetSdk.csproj
          sed -i "s/^    <AssemblyVersion>.*<\/AssemblyVersion>/    <AssemblyVersion>${{ inputs.version }}<\/AssemblyVersion>/" FireboltNETSDK/FireboltDotNetSdk.csproj
          sed -i "s/^    <Version>.*<\/Version>/    <Version>${{ inputs.version }}<\/Version>/" FireboltNETSDK/FireboltDotNetSdk.csproj
          git branch
          git diff
          git add FireboltNETSDK/FireboltDotNetSdk.csproj
          git commit -m "Automatic version bump to ${{ inputs.version }}"
          git push origin fix-string-nullability
        shell: bash
        
      - name: Publish tag on github
        run: |
          git tag ${{ inputs.version }}
          git push origin ${{ inputs.version }}
        shell: bash

      - name: Set up .NET 6.0
        id: dotnet-setup
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 6.0
          
      - name: use .NET 6.0
        run: |
          dotnet new globaljson --sdk-version '${{ steps.dotnet-setup.outputs.dotnet-version }}'

      - name: Build package
        run: |
          dotnet restore
          dotnet build
          dotnet pack
        shell: bash

      - name: Publish package on Nuget
        run: |
          dotnet nuget push FireboltNETSDK/bin/Debug/FireboltNetSDK.${{ inputs.version }}.nupkg \
            --api-key ${{ secrets.PUBLISH_API_KEY }} \
            --source https://api.nuget.org/v3/index.json
        shell: bash
